type: install
name: Docker Registry
baseUrl: https://raw.githubusercontent.com/mrAlexZT/registry/master/
logo: images/docker-logo.png
categories:
- apps/dev-and-admin-tools

description:
  text: text/description.md
  short: Your own private docker registry.

globals:
  registryURL: ${env.domain}
  registryPort: 5000
  registryUser: jelastic
  registryPassword: ${fn.password}
  LetsEncryptTestParams: ""

settings:
  fields:
    - type: list
      name: CertTypeToInstall
      caption: Certificate To Install
      values:
        install_cert_le: Let's Encrypt Certificate
        install_cert_ss: Self Signed Certificate
      default: install_cert_ss
      required: true
      showIf:
        install_cert_le:
          - type: list
            name: install_cert_le_production
            caption: Let's Encrypt Type
            default: "true"
            values:
              true: Let's Encrypt Authority X3
              false: Fake LE Intermediate X1
    - type: radio-fieldset
      name: isPublicIPEnabled
      default: "false"
      values:
        true: Public IP.
        false: Endpoint.

addons:
  - id: update-registry-certificate-addon
    type: update
    name: Docker Registry Configuration
    baseUrl: https://raw.githubusercontent.com/mrAlexZT/registry/master/
    description: Docker Registry Configuration Add-on
    logo: images/docker-logo.png
    buttons:
    - confirmText: Do you want to re-install attached SSL certificate(s)?
      loadingText: Re-installing attached SSL certificate(s)...
      action: install_certificate
      caption: Re-install attached SSL certificate(s)
      successText: success.md

nodes:
  - nodeGroup: cp
    image: jelos/registry:centos7
    cloudlets: 10
    extip: ${settings.isPublicIPEnabled}
    addons: ["update-registry-certificate-addon"]
    env:
      ENV REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      ENV REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      ENV REGISTRY_AUTH: htpasswd
      REGISTRY_HTTP_SECRET: ${globals.registryPassword}
      #################################################
      REGISTRY_HTTP_TLS_CERTIFICATE: /home/fullchain.pem
      REGISTRY_HTTP_TLS_KEY: /home/privkey.pem
      #################################################

onInstall:
  - prepare_registry
  - if ("${settings.isPublicIPEnabled}" == "false"): addendpoint        
  - install_certificate
  - start_registry

actions:
  prepare_registry:
    - cmd [cp]: |-
        [[ ! -d "/auth" ]] && mkdir /auth
        /usr/bin/htpasswd -Bbn "${globals.registryUser}" "${globals.registryPassword}" > /auth/htpasswd
        /usr/bin/echo -e "LOGIN=${globals.registryUser}\nPASSWORD=${globals.registryPassword}" >> /home/registry_auth

  start_registry:
    - cmd [cp]: |-
        echo "@reboot root /bin/bash /entrypoint.sh" > /etc/cron.d/registry
    - restartNodes:
        nodeGroup: [cp]
        reboot: true

  addendpoint:
    - env.control.addendpoint [${nodes.docker[0].id}]:
      privatePort: 5000
      protocol: TCP
      name: Registry Shared Port
    - log: publicPort = ${response.object.publicPort}
    - setGlobals:
        registryPort: ${response.object.publicPort}

  install_certificate:
    - if ('${settings.CertTypeToInstall}' == 'install_cert_le'): install_cert_le
    - if ('${settings.CertTypeToInstall}' == 'install_cert_ss'): install_cert_ss

  install_cert_le:
    - log: Install ${settings.CertTypeToInstall}
    - if ("${settings.install_cert_le_production}" == "false"):
      - setGlobals:
          LetsEncryptTestParams: "--test-cert --break-my-certs "
    - cmd [cp]: |-
        /usr/bin/echo install_cert_le > /home/CertTypeToInstall
        /usr/bin/certbot certonly --standalone ${globals.LetsEncryptTestParams} --domain ${globals.registryURL} --preferred-challenges http-01 --http-01-port 80 --renew-by-default --email ${user.email} --agree-tos --no-bootstrap --no-self-upgrade --no-eff-email --logs-dir /var/log/letsencrypt
        ln -s /etc/letsencrypt/live/${globals.registryURL}/fullchain.pem /home/fullchain.pem
        ln -s /etc/letsencrypt/live/${globals.registryURL}/privkey.pem /home/privkey.pem

  install_cert_ss:
    - log: Install ${settings.CertTypeToInstall}
    - cmd [cp]: |-
        /usr/bin/echo install_cert_ss > /home/CertTypeToInstall
        /usr/bin/openssl req -new -x509 -days 3065 -nodes \
        -out /home/fullchain.pem \
        -keyout /home/privkey.pem \
        -subj "/C=UA/ST=Zhytomyr/L=ZT/O=Jelastic/OU=Quality Assurance Department/emailAddress=${user.email}/CN=${globals.registryURL}"

success: text/success.md
