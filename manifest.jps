type: install
name: Docker Registry
baseUrl: https://raw.githubusercontent.com/mrAlexZT/registry/master/
logo: https://www.docker.com/sites/default/files/d8/2019-07/horizontal-logo-monochromatic-white.png
categories:
- apps/dev-and-admin-tools

description:
  text: Your own private docker registry secured by LetsEncrypt and password authentication.
  short: Your own private docker registry.

globals:
  registryURL: ${env.domain}
  registryPort: "5000"

settings:
  fields:
    - type: list
      name: CertTypeToInstall
      caption: Certificate To Install
      values:
        install_cert_le: Let's Encrypt Certificate
        install_cert_ss: Self Signed Certificate
      default: install_cert_ss
      required: true
    - type: radio-fieldset
      name: isPublicIPEnabled
      default: "false"
      values:
        true: Public IP.
        false: Endpoint.

nodes:
  - nodeType: docker
    image: jelos/registry:latest
    cloudlets: 10
    extip: ${settings.isPublicIPEnabled}

onInstall:
  - if ("${settings.isPublicIPEnabled}" == "false"): addendpoint        
  - if ('${settings.CertTypeToInstall}' == 'install_cert_le'): install_cert_le
  - if ('${settings.CertTypeToInstall}' == 'install_cert_ss'): install_cert_ss

actions:
  addendpoint:
    - env.control.addendpoint [${nodes.docker[0].id}]:
      privatePort: 5000
      protocol: TCP
      name: Registry Shared Port
    - log: publicPort = ${response.object.publicPort}
    - setGlobals:
        registryPort: ${response.object.publicPort}

  install_cert_le:
    - log: Install ${settings.CertTypeToInstall}
    - cmd [*]: echo install_cert_le > /home/CertTypeToInstall

  install_cert_ss:
    - log: Install ${settings.CertTypeToInstall}
    - cmd [*]: echo install_cert_ss > /home/CertTypeToInstall

success: success.md
